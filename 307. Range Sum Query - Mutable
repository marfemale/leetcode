class NumArray:

    def __init__(self, nums: List[int]):
        self.n = len(nums)
        self.tree = [0] * self.n + nums
        for i in range(self.n - 1, 0, -1):
            self.tree[i] = self.tree[i << 1] + self.tree[i << 1 | 1]

    def update(self, index: int, val: int) -> None:
        m = self.n + index
        self.tree[m] = val
        while m > 1:
            self.tree[m >> 1] = self.tree[m] + self.tree[m ^ 1]
            m >>= 1

    def sumRange(self, left: int, right: int) -> int:
        m = self.n + left
        k = self.n + right
        res = 0
        while m <= k:
            if m & 1:
                res += self.tree[m]
                m += 1
            m >>= 1
            if k & 1 == 0:
                res += self.tree[k]
                k -= 1
            k >>= 1
        return res
