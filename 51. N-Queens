class Solution:
    def solveNQueens(self, n: int) -> List[List[str]]:
        #[1,3,0,2],[3,0,2,1]
        #dfs([0],[0],[0])
        def dfs(queue, sdiag, cdiag):
            if len(queue) == n:
                res.append(queue)
                return
            row = len(queue)
            for col in range(n):
                if col not in queue and row - col not in sdiag and row + col not in cdiag:
                    dfs(queue + [col], sdiag + [row - col], cdiag + [row + col])
        res = []
        dfs([], [], [])
        return [["." * i + "Q" + "." * (n - i - 1) for i in sol] for sol in res]
