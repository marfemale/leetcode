# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def longestUnivaluePath(self, root: TreeNode) -> int:
        self.res = 1
        def dfs(node):
            if not node:
                return 0
            left = dfs(node.left)
            right = dfs(node.right)
            leftarrow = rightarrow = 0
            if node.left and node.left.val == node.val:
                leftarrow = left
            if node.right and node.right.val == node.val:
                rightarrow = right
            self.res = max(self.res, leftarrow + rightarrow + 1)
            return max(leftarrow, rightarrow) + 1
        dfs(root)
        return self.res - 1
