class Solution:
    def minWindow(self, s: str, t: str) -> str:
        cs, ct = defaultdict(int), Counter(t)
        i, left, right, elem = 0, 0, len(s), 0
        for j in range(len(s)):
            cs[s[j]] += 1
            if s[j] in ct and cs[s[j]] == ct[s[j]]:
                elem += 1
            while i <= j and elem == len(ct):
                if j - i < right - left:
                    left, right = i, j
                cs[s[i]] -= 1
                if s[i] in ct and cs[s[i]] < ct[s[i]]:
                    elem -= 1
                i += 1
        return s[left: right + 1] if right - left < len(s) else ""
    
    
    
    
    
    
    
        # ct, need = Counter(t), len(t)
        # i, left, right = 0, 0, len(s)
        # for j in range(len(s)):
        #     if ct[s[j]] > 0:
        #         need -= 1
        #     ct[s[j]] -= 1
        #     while need == 0:
        #         if j - i < right - left:
        #             left, right = i, j
        #         ct[s[i]] += 1
        #         if ct[s[i]] > 0:
        #             need += 1
        #         i += 1
        # return s[left: right + 1] if right - left < len(s) else ""
