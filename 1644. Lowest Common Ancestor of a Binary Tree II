# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        def dfs(root, p, q):
            if not root:
                return None
            left, right = dfs(root.left, p, q), dfs(root.right, p, q)
            if root == p:
                self.first = True
                return root
            if root == q:
                self.second = True
                return root
            if left and right:
                return root
            return left or right
        self.first, self.second = False, False
        res = dfs(root, p, q)
        return res if (self.first and self.second) else None
