class Solution:
    def findCheapestPrice(self, n: int, flights: List[List[int]], src: int, dst: int, K: int) -> int:
        graph = defaultdict(list)
        for u, v, w in flights:
            graph[u].append((v, w))
        q = [(0, src, 0)]
        while q:
            price, city, stop = heapq.heappop(q)
            if stop > K + 1:
                continue
            if city == dst:
                return price
            for nei, pri in graph[city]:
                heapq.heappush(q, (price + pri, nei, stop + 1))
        return -1
