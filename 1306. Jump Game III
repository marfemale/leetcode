class Solution:
    def canReach(self, arr: List[int], start: int) -> bool:
        # q = deque([start])
        # visit = set([start])
        # while q:
        #     i = q.popleft()
        #     if arr[i] == 0:
        #         return True
        #     for j in [i + arr[i], i - arr[i]]:
        #         if 0 <= j < len(arr) and j not in visit:
        #             visit.add(j)
        #             q.append(j)
        # return False
        
        
        def dfs(i):
            if i < 0 or i >= len(arr) or i in visit:
                return False
            if arr[i] == 0:
                return True
            visit.add(i)
            return dfs(i + arr[i]) or dfs(i - arr[i])
        visit = set()
        return dfs(start)
