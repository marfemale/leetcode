class Solution:
    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:
        m, n = len(nums1), len(nums2)
        if m > n:
            nums1, nums2, m, n = nums2, nums1, n, m
        left, right, half = 0, m, (m + n + 1) // 2
        while left <= right:
            i = left + (right - left) // 2
            j = half - i
            if i > 0 and nums1[i - 1] > nums2[j]:
                right = i - 1
            elif i < m and nums1[i] < nums2[j - 1]:
                left = i + 1
            else:
                if i == 0:
                    leftmax = nums2[j - 1]
                elif j == 0:
                    leftmax = nums1[i - 1]
                else:
                    leftmax = max(nums1[i - 1], nums2[j - 1])
                if (m + n) % 2:
                    return leftmax
                if i == m:
                    rightmin = nums2[j]
                elif j == n:
                    rightmin = nums1[i]
                else:
                    rightmin = min(nums1[i], nums2[j])
                return (leftmax + rightmin) / 2
