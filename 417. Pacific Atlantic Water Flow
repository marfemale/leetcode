class Solution:
    def pacificAtlantic(self, matrix: List[List[int]]) -> List[List[int]]:
        if not matrix or not matrix[0]:
            return []
        m, n = len(matrix), len(matrix[0])
        pacific, atlantic, visitp, visita = deque(), deque(), set(), set()
        for i in range(m):
            pacific.append([i, 0])
            visitp.add((i, 0))
            atlantic.append([i, n - 1])
            visita.add((i, n - 1))
        for j in range(n):
            pacific.append([0, j])
            visitp.add((0, j))
            atlantic.append([m - 1, j])
            visita.add((m - 1, j))
        while pacific:
            r, c = pacific.popleft()
            for nr, nc in [(r + 1, c), (r - 1, c), (r, c + 1), (r, c - 1)]:
                if 0 <= nr < m and 0 <= nc < n and (nr, nc) not in visitp and matrix[nr][nc] >= matrix[r][c]:
                    pacific.append([nr, nc])
                    visitp.add((nr, nc))
        while atlantic:
            r, c = atlantic.popleft()
            for nr, nc in [(r + 1, c), (r - 1, c), (r, c + 1), (r, c - 1)]:
                if 0 <= nr < m and 0 <= nc < n and (nr, nc) not in visita and matrix[nr][nc] >= matrix[r][c]:
                    atlantic.append([nr, nc])
                    visita.add((nr, nc))
        return visitp & visita
