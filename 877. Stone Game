class Solution:
    def stoneGame(self, piles: List[int]) -> bool:
        @functools.lru_cache(None)
        def dfs(i,j):
            if i>j:
                return 0
            turn=(j-i)%2
            if turn:
                return max(piles[i]+dfs(i+1,j),piles[j]+dfs(i,j-1))
            else:
                return min(-piles[i]+dfs(i+1,j),-piles[j]+dfs(i,j-1))
        return dfs(0,len(piles)-1)>0
