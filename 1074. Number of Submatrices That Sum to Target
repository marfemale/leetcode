class Solution:
    def numSubmatrixSumTarget(self, matrix: List[List[int]], target: int) -> int:
        m, n = len(matrix), len(matrix[0])
        ps = [[0] * (n + 1) for _ in range(m + 1)]
        for i in range(1, m + 1):
            for j in range(1, n + 1):
                ps[i][j] = ps[i - 1][j] + ps[i][j - 1] - ps[i - 1][j - 1] + matrix[i - 1][j - 1]
        res = 0
        for r1 in range(1, m + 1):
            for r2 in range(r1, m + 1):
                dic = defaultdict(int)
                dic[0] = 1
                for c in range(1, n + 1):
                    cursum = ps[r2][c] - ps[r1 - 1][c]
                    res += dic[cursum - target]
                    dic[cursum] += 1
        return res
