class Solution:
    def removeInvalidParentheses(self, s: str) -> List[str]:
        def dfs(s, i, left, right):
            if left == right == 0:
                if valid(s)[0] == valid(s)[1] == 0:
                    res.append(s)
                return
            for j in range(i, len(s)):
                if j > i and s[j] == s[j - 1]:
                    continue
                if s[j] == "(" and left > 0:
                    dfs(s[:j] + s[j + 1:], j, left - 1, right)
                if s[j] == ")" and right > 0:
                    dfs(s[:j] + s[j + 1:], j, left, right - 1)
        def valid(word):
            left, right = 0, 0
            for ch in word:
                if ch == "(":
                    left += 1
                if ch == ")":
                    right = right + 1 if left == 0 else right
                    left = left - 1 if left > 0 else left
            return [left, right]
        res = []
        dfs(s, 0, valid(s)[0], valid(s)[1])
        return res
