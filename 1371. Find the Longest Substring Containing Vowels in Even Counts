class Solution:
    def findTheLongestSubstring(self, s: str) -> int:
        # vowel = {"a": 1, "e": 2, "i": 4, "o": 8, "u": 16}
        # res, cur, d = 0, 0, {0: -1}
        # for i, ch in enumerate(s):
        #     if ch in vowel:
        #         cur ^= vowel[ch]
        #         if cur not in d:
        #             d[cur] = i
        #     res = max(res, i - d[cur])
        # return res
        for long in range(len(s), 0, -1):
            for i in range(len(s) - long + 1):
                temp = s[i: i + long]
                for v in "aeiou":
                    if temp.count(v) % 2:
                        break
                else:
                    return long
        return 0
